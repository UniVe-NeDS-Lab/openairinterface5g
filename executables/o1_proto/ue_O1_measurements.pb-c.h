/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: ue_O1_measurements.proto */

#ifndef PROTOBUF_C_ue_5fO1_5fmeasurements_2eproto__INCLUDED
#define PROTOBUF_C_ue_5fO1_5fmeasurements_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _O1MeasurementsReport O1MeasurementsReport;


/* --- enums --- */


/* --- messages --- */

struct  _O1MeasurementsReport
{
  ProtobufCMessage base;
  char *imsi;
  protobuf_c_boolean has_rx_power_avg;
  int32_t rx_power_avg;
  protobuf_c_boolean has_rx_power_tot;
  int32_t rx_power_tot;
  protobuf_c_boolean has_n0_power_avg;
  int32_t n0_power_avg;
  protobuf_c_boolean has_n0_power_tot;
  int32_t n0_power_tot;
  protobuf_c_boolean has_rx_rssi_dbm;
  int32_t rx_rssi_dbm;
  protobuf_c_boolean has_ssb_rsrp_dbm;
  int32_t ssb_rsrp_dbm;
  protobuf_c_boolean has_mcs;
  int32_t mcs;
};
#define O1_MEASUREMENTS_REPORT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&o1_measurements_report__descriptor) \
    , NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


/* O1MeasurementsReport methods */
void   o1_measurements_report__init
                     (O1MeasurementsReport         *message);
size_t o1_measurements_report__get_packed_size
                     (const O1MeasurementsReport   *message);
size_t o1_measurements_report__pack
                     (const O1MeasurementsReport   *message,
                      uint8_t             *out);
size_t o1_measurements_report__pack_to_buffer
                     (const O1MeasurementsReport   *message,
                      ProtobufCBuffer     *buffer);
O1MeasurementsReport *
       o1_measurements_report__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   o1_measurements_report__free_unpacked
                     (O1MeasurementsReport *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*O1MeasurementsReport_Closure)
                 (const O1MeasurementsReport *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor o1_measurements_report__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_ue_5fO1_5fmeasurements_2eproto__INCLUDED */
